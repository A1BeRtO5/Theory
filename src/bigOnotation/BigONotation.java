package bigOnotation;

public class BigONotation {
//    big o notation - використувується для визначення алгоритмічної складності програми або фрагменту коду.
//    допомагає оцінити час виконання.
//      1. o(1) - константна складність.
//          час не залежить від обєкту.(індекс масиву)
//      2. o(log n) - логарифмічна складність.
//            час зростає логарифмічно до обєкту. (бінарний пошук)
//      3. o(n) - лінійна складність
//            час зростає лінійно з обєктом (ітерація по всіх елементах масива)
//      4. o(n log n) - лінійно-логарифмічна складність.
//            час зростає пропорційно добутку обєкту данних на логарифм з обєму данних.
//            (швидке сортування)
//      5. o(n^2) - квадратична складність
//            час зростає квадратично з зростанням обєкту. (вкладений цикл з ітерацією по елементах)
//      6. o(2^n) - еспоненціальна кладність
//            час зростеє еспоненціально з збільшенням обєкту. (генерація всіх можливих підмножин множини )
//      7. o(n!) -факторіальна складність.
//            час зростає факторіально до обєму. (обчислення факторіала числа)
//
}
